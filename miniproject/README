Your final programming assignment is the "miniproject." For this
assignment, you may submit a proposal for a project of your choosing,
or you may choose from two different options.

This miniproject is due at the end of your scheduled final exam period.

For any of these options, you may need to consult other materials for
relevant domain knowledge. However, you should have obtained the
programming skills to complete the project in this course. 

Your miniproject options are:

 (1) A mesh generator
     You may consult a provided paper, but the domain knowledge should
     be contained in the instructions. This is a good option if your
     focus is computational mechanics.
 (2) Efficient frontier
     This involves some finance background, which is given in the
     instructions, but you will need to consult sources of domain
     knowledge to do the optimization. This is a good option if you
     are interested in finance.

I expect these to be polished, well tested pieces of code.

For this project, YOU will tell ME how to test your code. You MUST
include a file called TESTING.txt. In this file, you should give me
step-by-step instructions to see that your code follows the
specifications of the README. For example, you might say

(1) Run ./myprogram testcases/input1.txt
    You will see that it prints xyz, which is correct because [reasons]
(2) Run ./myprogram testcases/input2.txt
    You will see that it prints xyz, which is correct because [reasons]

If I am satisfied that your testcases are sufficient, I will not make
any more of my own, and you will receive full credit for adequate
testing. If I am not satisfied with your testcases, I will add more
testcases of my own, and you will lose points for test coverage.

We do not usually grade you on code quality, however, on this
assignment we will. We expect your code to 
  - Be adequately commented
  - Make good use of abstraction (both in terms of functions and
    classes) 
  - Be well-formatted and easy to read
  - Use good variable names. If I see a variable called "flag" (or
    anything like that), I guarantee you will lose points here.

As always, you should perform good error checking, and valgrind cleanly.