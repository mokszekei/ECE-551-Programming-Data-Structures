Current directory is ~/intro_prog/miniproject/
GNU gdb (Ubuntu 8.1-0ubuntu3) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from mesh...done.
(gdb) start
Temporary breakpoint 1 at 0x18a3: file mesh.cpp, line 14.
Starting program: /home/sm745/intro_prog/miniproject/mesh mesh.txt

Temporary breakpoint 1, main (argc=2, argv=0x7fffffffe4b8) at mesh.cpp:14
14	int main(int argc, char ** argv) {
(gdb) n
15	  if (argc != 2) {
(gdb) n
19	  std::ifstream f(argv[1]);
(gdb) n
20	  if (!f) {
(gdb) n
24	  Surface surface;
(gdb) n
27	    surface.readfile(f);
(gdb) s
Surface::readfile (this=0x7fffffffe180, f=...) at mesh.h:95
95	  void readfile(std::ifstream & f) {
(gdb) n
96	    std::string line;
(gdb) n
97	    std::getline(f, line);
(gdb) n
98	    max_x = std::stod(line);
(gdb) p line
$1 = "  1.0"
(gdb) n
99	    std::getline(f, line);
(gdb) n
100	    max_y = std::stod(line);
(gdb) n
101	    int id = 0;
(gdb) p max_x
$2 = 1
(gdb) p max_y
$3 = 1.3500000000000001
(gdb) n
102	    while (std::getline(f, line)) {
(gdb) n
103	      std::size_t p1 = 0;
(gdb) n
104	      std::size_t p2 = 0;
(gdb) n
105	      p1 = line.find(' ');
(gdb) n
106	      p2 = line.find(' ');
(gdb) n
107	      if (p2 == std::string::npos) {
(gdb) p p1
$4 = 0
(gdb) p p2
$5 = 0
(gdb) q

Debugger finished
